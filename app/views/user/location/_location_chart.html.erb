<script type="text/javascript">
  $(function () {
    $('#location-chart').highcharts({
      chart: {
        type: 'column',
        height: 500,
        animation: true
      },
      title: { text: null },
      legend: {
        enabled: false
      },
      xAxis: {
        type: 'category',
        title: {
          text: 'Location'
        }
      },
      yAxis: {
        title: {
          text: null
        }
      },
      series: [{
            name: 'Workouts',
            colorByPoint: true,
            data: null
        }],
    });
  });

  <!-- DYNAMIC CHART -->
  $('#create-location-chart').on('click', function() {
    updateChart();
  })

  $('#y-axis').on('change', function() {
    updateChart();
  })

  function updateChart(){
    var $chart = $('#location-chart').highcharts()
    var minDistance = parseInt($('#minimum_distance').val());
    var maxDistance = parseInt($('#maximum_distance').val());
    var locations = $("#location").val();

    var range = minDistance.toString() + ' - ' + maxDistance.toString() + ' mile ';
    var yAxisSelection = $('#y-axis').val();

    $chart.setTitle({ text: 'Location vs. ' + yAxisSelection + ' for ' + range + 'runs' });

    var yAxisUnits = {
      "Average Total Time": " (min)",
      "Average Speed": " (mph)"
    };

    $chart.yAxis[0].setTitle({ text: yAxisSelection + yAxisUnits[yAxisSelection] });

    var data = {
      "Average Total Time": <%= @workouts.distance_location_and_total_time.to_json.html_safe %>
    };


    var workouts_by_location = data[yAxisSelection];
    var plotData = [];

    for (var location in workouts_by_location) {
      if ($.inArray(location, locations) > -1) {
        plotData.push({
          name: location,
          y: averageTotalTime(workouts_by_location[location], minDistance, maxDistance)
        })
      }
    }

    plotData.sort(compare);

    for(var i = 0; i < plotData.length; i++) {
      if(plotData[i].y == 0) {
        plotData.splice(i, plotData.length);
        break
      }
    }

    $chart.series[0].setData(plotData);
    $chart.series[0].update({
      animation: {
        duration: 250
      }
    });
  }

  function averageTotalTime(dataset, minDistance, maxDistance) {
    var filtered = [];

    dataset.forEach(function(set){
      if (set[0] >= minDistance && set[0] <= maxDistance) {
        var y = set[1];
        filtered.push(y);
      }
    })

    if (filtered[0] == undefined) {
      return 0;
    } else {
      var total = 0;
      for (var i = 0; i < filtered.length; i++) {
        total += filtered[i];
      }
      var avg = total / filtered.length;

      return avg;
    }
  }

  function compare(a, b) {
    if (a.y > b.y) {
      return -1;
    } else if (a.y < b.y) {
      return 1;
    } else {
      return 0;
    }
  }
</script>
